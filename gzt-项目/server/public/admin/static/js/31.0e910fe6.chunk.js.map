{"version":3,"sources":["pages/company/AppSetting.tsx"],"names":["TabPane","AppSetting","connect","state","Object","C_Users_82052_code_gzt_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_13__","listLoading","loading","effects","concat","dispatch","queryApps","type","toggleApp","body","cb","payload","handleSwitch","checked","id","per_id","messageText","_this","props","is_enable","status","antd_es_message__WEBPACK_IMPORTED_MODULE_7__","success","error","this","_this2","apps","react__WEBPACK_IMPORTED_MODULE_16__","className","antd_es_tabs__WEBPACK_IMPORTED_MODULE_15__","tab","key","antd_es_row__WEBPACK_IMPORTED_MODULE_3__","antd_es_col__WEBPACK_IMPORTED_MODULE_5__","span","map","_ref","_ref$per_sort","per_sort","name","description","antd_es_switch__WEBPACK_IMPORTED_MODULE_1__","defaultChecked","onChange","checkedChildren","unCheckedChildren","React"],"mappings":"8TAOQA,uBAwCaC,EADpBC,YA1BuB,SAACC,GACvB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFD,EAAK,WADV,CAEEG,YAAaH,EAAMI,QAAQC,QAAd,GAAAC,OALC,aAKD,kBAIU,SAACC,GAC1B,MAAO,CACLC,UADK,WAEHD,EAAS,CACPE,KAAI,GAAAH,OAbM,aAaN,iBAGRI,UANK,SAMKC,EAAWC,GACnBL,EAAS,CACPE,KAAI,GAAAH,OAlBM,aAkBN,cACJO,QAAS,CACPF,OACAC,yNAcRE,aAAe,SAACC,EAAkBC,EAASC,GAEzC,IAAMC,EAAcH,EAAQ,2BAAO,2BACnCI,EAAKC,MAAMV,UAAU,CACnBM,KACAC,SACAI,UAAWN,EAAU,EAAI,GACxB,SAACO,GACY,YAAXA,EACDC,EAAA,EAAQC,QAAQN,GAEhBK,EAAA,EAAQE,MAAM,4JAdlBC,KAAKN,MAAMZ,6CAmBJ,IAAAmB,EAAAD,KAECE,EAASF,KAAKN,MAAdQ,KAER,OACEC,EAAA,qBAAKC,UAAU,uBACbD,EAAA,cAAAE,EAAA,OACEF,EAAA,cAAChC,EAAD,CAASmC,IAAI,2BAAOC,IAAI,KACtBJ,EAAA,yBACEA,EAAA,cAAAK,EAAA,GAAKJ,UAAU,qBACbD,EAAA,cAAAM,EAAA,GAAKC,KAAM,GAAX,gBACAP,EAAA,cAAAM,EAAA,GAAKC,KAAM,IAAX,4BACAP,EAAA,cAAAM,EAAA,GAAKC,KAAM,GAAX,iBAGAR,GAAQA,EAAKS,IAAI,SAAAC,GAAA,IAAGtB,EAAHsB,EAAGtB,GAAHuB,EAAAD,EAAOE,SAAgBvB,EAAvBsB,EAAmBvB,GAAYyB,EAA/BF,EAA+BE,KAAMC,EAArCH,EAAqCG,YAAerB,EAApDiB,EAAoDjB,UAApD,OACfQ,EAAA,cAAAK,EAAA,GAAKJ,UAAU,mBAAmBG,IAAKjB,GACrCa,EAAA,cAAAM,EAAA,GAAKC,KAAM,GAAIK,GACfZ,EAAA,cAAAM,EAAA,GAAKC,KAAM,IAAKM,GAChBb,EAAA,cAAAM,EAAA,GAAKC,KAAM,GACTP,EAAA,cAAAc,EAAA,GACEC,eAA8B,IAAdvB,EAChBwB,SAAU,SAAC9B,GAAD,OAAaY,EAAKb,aAAaC,EAASC,EAAIC,IACtD6B,gBAAgB,eAChBC,kBAAkB,uBAShClB,EAAA,cAAChC,EAAD,CAASmC,IAAI,2BAAOC,IAAI,KAAxB,4BACAJ,EAAA,cAAChC,EAAD,CAASmC,IAAI,2BAAOC,IAAI,KAAxB,qCAxD8Be","file":"static/js/31.0e910fe6.chunk.js","sourcesContent":["\r\nimport * as React from 'react';\r\nimport { Tabs, Row, Col, Switch, message } from 'antd';\r\nimport { connect } from 'dva';\r\n\r\nimport './appSetting.scss';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface AppSettingProps {\r\n  /** 应用列表 */\r\n  apps: any[];\r\n  /** 获取应用列表 */\r\n  queryApps: Function;\r\n  /** 启用 / 禁用 app */\r\n  toggleApp: Function;\r\n}\r\n\r\nconst NAMESPACE = 'AppSetting';\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    ...state[NAMESPACE],\r\n    listLoading: state.loading.effects[`${NAMESPACE}/queryApps`],\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    queryApps() {\r\n      dispatch({\r\n        type: `${NAMESPACE}/queryApps`\r\n      })\r\n    },\r\n    toggleApp(body: any, cb:Function) {\r\n      dispatch({\r\n        type: `${NAMESPACE}/toggleApp`,\r\n        payload: {\r\n          body,\r\n          cb\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n@connect(mapStateToProps, mapDispatchToProps)\r\nexport default class AppSetting extends React.Component<AppSettingProps, any> {\r\n\r\n  componentDidMount() {\r\n    this.props.queryApps();\r\n  }\r\n\r\n  handleSwitch = (checked: boolean, id: any, per_id: any) => {\r\n\r\n    const messageText = checked?'启用成功':'禁用成功';\r\n    this.props.toggleApp({\r\n      id,\r\n      per_id,\r\n      is_enable: checked ? 1 : 0\r\n    }, (status: string) => {\r\n      if(status === 'success') {\r\n        message.success(messageText);\r\n      }else {\r\n        message.error('服务器异常，请稍后再试')\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { apps } = this.props;\r\n\r\n    return (\r\n      <div className=\"app-setting wrapper\">\r\n        <Tabs>\r\n          <TabPane tab=\"应用管理\" key=\"1\">\r\n            <div>\r\n              <Row className=\"app-setting-title\">\r\n                <Col span={4}>应用</Col>\r\n                <Col span={16}>简要说明</Col>\r\n                <Col span={4}>操作</Col>\r\n              </Row>\r\n              {\r\n                apps && apps.map(({ id, per_sort: { id: per_id, name, description }, is_enable }) => (\r\n                  <Row className=\"app-setting-item\" key={id}>\r\n                    <Col span={4}>{name}</Col>\r\n                    <Col span={16}>{description}</Col>\r\n                    <Col span={4}>\r\n                      <Switch\r\n                        defaultChecked={is_enable === 1}\r\n                        onChange={(checked) => this.handleSwitch(checked, id, per_id)}\r\n                        checkedChildren=\"启用\"\r\n                        unCheckedChildren=\"禁用\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                ))\r\n              }\r\n            </div>\r\n\r\n          </TabPane>\r\n          <TabPane tab=\"参数设置\" key=\"2\">参数设置</TabPane>\r\n          <TabPane tab=\"企业认证\" key=\"3\">企业认证</TabPane>\r\n        </Tabs>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n}"],"sourceRoot":""}