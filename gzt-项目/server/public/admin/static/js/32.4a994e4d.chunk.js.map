{"version":3,"sources":["pages/index/sms.tsx","pages/index/personnel.tsx","utils/handleSize.ts","pages/index/disk.tsx","pages/index/index.tsx"],"names":["DataView","DataSet","Html","Guide","dv","cols","percent","formatter","val","SmsData","props","dataSource","used","use_number","data","item","count","type_number","source","transform","type","field","dimension","as","react_default","a","createElement","BizCharts","width","height","padding","scale","forceFit","radius","innerRadius","name","showTitle","itemTpl","position","html","concat","filter","_ref","alignX","alignY","color","tooltip","items","value","_ref2","style","lineWidth","stroke","toFixed","PersonnelData","staff_number","partner","external_contact","offsetY","offsetX","itemFormatter","units","handleSize","size","level","arguments","length","undefined","Math","pow","round","Text","DiskData","gender","path","min","max","shape","opacity","map","row","Fragment","content","join","top","fontSize","textAlign","fill","Header","Content","IconFont","icon","createFromIconfontCN","scriptUrl","extraCommonProps","connect","state","basisInfo","dispatch","queryBasisInfo","useEffect","layout","marginTop","overflow","className","es_row","align","col","span","avatar","src","base_info","logo","url","abbreviation","Link","to","marginLeft","verified","title","background","es_button","borderColor","borderRight","progress","base_limit","display","marginRight","ghost","paddingBottom","disk","sms"],"mappings":"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","file":"static/js/32.4a994e4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart, Geom, Axis, Tooltip, Coord, Guide\r\n} from 'bizcharts';\r\nimport DataSet from \"@antv/data-set\";\r\n\r\nconst { DataView } = DataSet;\r\nconst { Html } = Guide;\r\nconst dv = new DataView();\r\n\r\nconst cols = {\r\n  percent: {\r\n    formatter: (val: any) => {\r\n      val = val * 100 + \"%\";\r\n      return val;\r\n    }\r\n  }\r\n};\r\n\r\nexport interface SmsData {\r\n  dataSource: any;\r\n}\r\n\r\nexport default function SmsData(props: SmsData) {\r\n\r\n  const { dataSource } = props;\r\n  if (!dataSource) {\r\n    return null\r\n  }\r\n const used = dataSource.use_number || 0;\r\n  \r\n  const data = [\r\n    { item: \"已用条数\", count: used },\r\n    { item: \"剩余条数\", count: dataSource.type_number - used }\r\n  ];\r\n\r\n  dv.source(data).transform({\r\n    type: \"percent\",\r\n    field: \"count\",\r\n    dimension: \"item\",\r\n    as: \"percent\"\r\n  });\r\n\r\n  return (\r\n    <Chart\r\n      width={400}\r\n      height={300}\r\n      data={dv}\r\n      padding={40}\r\n      scale={cols}\r\n      forceFit\r\n    >\r\n      <Coord type=\"theta\" radius={1} innerRadius={0.6} />\r\n      <Axis name=\"percent\" />\r\n      <Tooltip\r\n        showTitle={false}\r\n        itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\"\r\n      />\r\n      <Guide>\r\n        <Html\r\n          position={[\"50%\", \"50%\"]}\r\n          html={`<div style=&quot;color:#8c8c8c;font-size:1.16em;text-align: center;width: 120px;overflow:hidden&quot;>短信剩余<br><span style=&quot;color:#262626;font-size:2em&quot;>${data.filter(({ item }) => item === '剩余条数')[0].count}</span>条</div>`}\r\n          alignX=\"middle\"\r\n          alignY=\"middle\"\r\n        />\r\n      </Guide>\r\n      <Geom\r\n        type=\"intervalStack\"\r\n        position=\"percent\"\r\n        color={['item', ['rgb(248, 189, 87)', 'rgb(255, 155, 212)']]}\r\n        tooltip={[\r\n          \"item*percent\",\r\n          (items, percent) => {\r\n            return {\r\n              name: items,\r\n              value: `${data.filter(({ item }) => item === items)[0].count}条`\r\n            };\r\n          }\r\n        ]}\r\n        style={{\r\n          lineWidth: 1,\r\n          stroke: \"#fff\"\r\n        }}\r\n      />\r\n    </Chart>\r\n  )\r\n}","import React from 'react';\r\nimport {\r\n  Chart, Geom, Axis, Tooltip, Legend, Coord\r\n} from 'bizcharts';\r\nimport DataSet from \"@antv/data-set\";\r\n\r\nconst { DataView } = DataSet;\r\n// const { Html } = Guide;\r\nconst dv = new DataView();\r\n\r\nconst cols = {\r\n  percent: {\r\n    formatter: (val: any) => {\r\n      val = (val * 100).toFixed(2) + \"%\";\r\n      return val;\r\n    }\r\n  }\r\n};\r\n\r\nexport interface SmsData {\r\n  dataSource: any;\r\n}\r\n\r\nexport default function PersonnelData(props: SmsData) {\r\n\r\n  const { dataSource } = props;\r\n  if (!dataSource) {\r\n    return null\r\n  }\r\n\r\n  const data = [\r\n    { item: \"员工人数\", count: dataSource.staff_number.use_number },\r\n    { item: \"合作伙伴数量\", count: dataSource.partner.use_number },\r\n    { item: \"外部联系人数\", count: dataSource.external_contact.use_number }\r\n  ];\r\n\r\n  dv.source(data).transform({\r\n    type: \"percent\",\r\n    field: \"count\",\r\n    dimension: \"item\",\r\n    as: \"percent\"\r\n  });\r\n\r\n  const height = 300;\r\n\r\n  return (\r\n    <Chart\r\n      width={400}\r\n      height={height}\r\n      data={dv}\r\n      padding={[40, 90, 40, 0]}\r\n      scale={cols}\r\n      forceFit\r\n    >\r\n      <Coord type=\"theta\" radius={1} innerRadius={0.6} />\r\n      <Axis name=\"percent\" />\r\n      <Legend\r\n        position=\"right\"\r\n        offsetY={-height / 2 + 80}\r\n        offsetX={-40}\r\n        itemFormatter={(val) => {\r\n          return `${val}: ${data.filter(({ item, count }) => item === val)[0].count}人`; // val 为每个图例项的文本值\r\n        }}\r\n      />\r\n      <Tooltip\r\n        showTitle={false}\r\n        itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\"\r\n      />\r\n      {/* <Guide>\r\n        <Html\r\n          position={[\"50%\", \"50%\"]}\r\n          html={`<div style=&quot;color:#8c8c8c;font-size:1.16em;text-align: center;width: 120px;overflow:hidden&quot;>短信剩余<br><span style=&quot;color:#262626;font-size:2em&quot;>${dataSource.type_number - 0}</span>条</div>`}\r\n          alignX=\"middle\"\r\n          alignY=\"middle\"\r\n        />\r\n      </Guide> */}\r\n      <Geom\r\n        type=\"intervalStack\"\r\n        position=\"percent\"\r\n        color=\"item\"\r\n        tooltip={[\r\n          \"item*percent\",\r\n          (item, percent) => {\r\n            return {\r\n              name: item,\r\n              value: `${data.filter(({ item }) => item === item)[0].count}人`\r\n            };\r\n          }\r\n        ]}\r\n        style={{\r\n          lineWidth: 1,\r\n          stroke: \"#fff\"\r\n        }}\r\n      />\r\n    </Chart>\r\n  )\r\n}","const units = ['B', 'KB', 'MB', 'GB', 'TB'];\r\n/**\r\n * 字节转成对应的 单位 支持 B, KB, MB, GB, TB 要支持更高的往数组后面追加对应的单位就行\r\n * 比如要支持 PB, 修改 units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB'] 即可\r\n * @param size 文件大小\r\n * @param level 不用传, 表示当前处于哪个级别的, 跟单位数组对应 \r\n */\r\nexport default function handleSize(size: number, level: number = 1): [number, string] {\r\n  return size / (1024 ** level) > 1\r\n    ? handleSize(size, level + 1)\r\n    : [Math.round((size / (1024 ** (level - 1))) * 100) / 100, units[level - 1]]\r\n}\r\n","// data-set 可以按需引入，除此之外不要引入别的包\r\nimport React from 'react';\r\nimport { Chart, Geom, Guide } from 'bizcharts';\r\nimport handleSize from '../../utils/handleSize';\r\n\r\nconst { Text } = Guide;\r\n\r\n\r\n\r\n\r\n\r\nexport interface DiskDataProps {\r\n  dataSource: any;\r\n}\r\n\r\nexport default function DiskData(props: DiskDataProps) {\r\n  const { dataSource } = props;\r\n  if (!dataSource) {\r\n    return null\r\n  }\r\n\r\n  const data = [{\r\n    gender: '云盘容量',\r\n    path: 'M381.759 0h292l-.64 295.328-100.127-100.096-94.368 94.368C499.808 326.848 512 369.824 512 415.712c0 141.376-114.56 256-256 256-141.376 0-256-114.624-256-256s114.624-256 256-256c48.8 0 94.272 13.92 133.12 37.632l93.376-94.592L381.76 0zM128.032 415.744c0 70.688 57.312 128 128 128s128-57.312 128-128-57.312-128-128-128-128 57.312-128 128z',\r\n    value: dataSource.type_number - dataSource.use_number\r\n  }];\r\n\r\n  const scale = {\r\n    value: {\r\n      min: 0,\r\n      max: dataSource.type_number\r\n    },\r\n  };\r\n\r\n  const height = 300;\r\n\r\n  return (\r\n    <Chart\r\n      height={height}\r\n      data={data}\r\n      scale={scale}\r\n      padding={[0, 40, 0, 40]}\r\n      forceFit\r\n    >\r\n      <Geom\r\n        type=\"interval\"\r\n        position=\"gender*value\"\r\n        color={['gender', 'rgb(163, 221, 248)']}\r\n        shape=\"liquid-fill-gauge\"\r\n        style={{\r\n          lineWidth: 5,\r\n          opacity: 0.75,\r\n        }}\r\n      />\r\n      <Guide>\r\n        {\r\n          data.map(\r\n            row => (\r\n              <>\r\n                <Text\r\n                  content={`剩余容量${handleSize(row.value).join('')}`}\r\n                  top\r\n                  position={{\r\n                    gender: row.gender,\r\n                    value: row.value / 2,\r\n                  }}\r\n                  style={{\r\n                    opacity: 0.75,\r\n                    fontSize: height / 15,\r\n                    textAlign: 'center',\r\n                  }}\r\n                />\r\n                <Text\r\n                  content={`网盘总量${handleSize(dataSource.type_number).join('')}`}\r\n                  top\r\n                  position={{\r\n                    gender: row.gender,\r\n                    value: row.value / 2,\r\n                  }}\r\n                  offsetY={-50}\r\n                  style={{\r\n                    opacity: 0.75,\r\n                    fontSize: height / 15,\r\n                    textAlign: 'center',\r\n                    fill: '#000'\r\n                  }}\r\n                />\r\n              </>\r\n            ))\r\n        }\r\n      </Guide>\r\n    </Chart>\r\n  )\r\n\r\n}\r\n","\r\nimport React, { useEffect } from 'react';\r\nimport { Layout, Row, Col, Avatar, Tooltip, Icon, Button, Progress } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'dva';\r\nimport { Dispatch } from 'redux';\r\nimport SmsData from './sms';\r\nimport PersonnelData from './personnel';\r\nimport DiskData from './disk';\r\nimport './index.scss';\r\n\r\nconst { Header, Content } = Layout;\r\nconst IconFont = Icon.createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_1176129_kmrrudd78js.js',\r\n  extraCommonProps: {\r\n    color: 'in'\r\n  }\r\n});\r\ninterface StateToHomeProps {\r\n  basisInfo: any;\r\n}\r\ninterface DispatchToHomeProps {\r\n  queryBasisInfo: Function;\r\n}\r\ninterface HomeProps extends StateToHomeProps, DispatchToHomeProps {\r\n}\r\n\r\nconst NAMESPACE = 'Basis';\r\nconst mapStateToProps = (state: any): StateToHomeProps => ({\r\n  basisInfo: state[NAMESPACE].basisInfo\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchToHomeProps => ({\r\n  queryBasisInfo() {\r\n    dispatch({\r\n      type: `${NAMESPACE}/queryBasisInfo`\r\n    })\r\n  }\r\n})\r\n\r\nfunction Home(props: HomeProps) {\r\n\r\n  const { basisInfo, queryBasisInfo } = props;\r\n\r\n  useEffect(() => {\r\n    queryBasisInfo()\r\n  }, [])\r\n\r\n  return (\r\n    <Layout style={{ marginTop: '64px', overflow: 'hidden' }}>\r\n      <Header className=\"index-header\">\r\n        <Row type=\"flex\" align=\"middle\">\r\n          <Col span={6} className=\"index-name\">\r\n            <Avatar size={64} src={basisInfo && basisInfo.base_info.logo && basisInfo.base_info.logo.url} >{basisInfo && basisInfo.base_info.abbreviation}</Avatar>\r\n            <div>\r\n              {basisInfo && basisInfo.base_info.name}\r\n              <Link to=\"/information\" style={{ marginLeft: 12 }} >编辑</Link>\r\n            </div>\r\n          </Col>\r\n          <Col span={18} className=\"index-cert\">\r\n            {\r\n              basisInfo\r\n                ? basisInfo.base_info.verified === 1\r\n                  ? (\r\n                    <>\r\n                      <Tooltip title=\"认证后可以自定义企业logo\">\r\n                        <span className=\"index-cert-has\">\r\n                          <IconFont style={{ fontSize: 24 }} type=\"icon-dingzhijiaju\" />\r\n                        </span>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"认证后最高增加20人\">\r\n                        <Avatar size={40} style={{ background: '#1890ff' }} icon=\"team\" />\r\n                      </Tooltip>\r\n                      <Tooltip title=\"认证后最高增加30条\">\r\n                        <span className=\"index-cert-has\">\r\n                          <IconFont style={{ fontSize: 24 }} type=\"icon-message\" />\r\n                        </span>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"认证后最高扩容 3G\">\r\n                        <span className=\"index-cert-has\">\r\n                          <IconFont style={{ fontSize: 24 }} type=\"icon-wangpan\" />\r\n                        </span>\r\n                      </Tooltip>\r\n                    </>\r\n                  )\r\n                  : (\r\n                    <>\r\n                      <Tooltip title=\"可以自定义企业logo\">\r\n                        <span className=\"index-cert-no\">\r\n                          <IconFont style={{ fontSize: 24 }} type=\"icon-dingzhijiaju\" />\r\n                        </span>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"认证后最高增加20人\">\r\n                        <Avatar size={40} icon=\"team\" />\r\n                      </Tooltip>\r\n                      <Tooltip title=\"认证后最高增加30条\">\r\n                        <span className=\"index-cert-no\">\r\n                          <IconFont style={{ fontSize: 24 }} type=\"icon-message\" />\r\n                        </span>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"认证后最高扩容 3G\">\r\n                        <span className=\"index-cert-no\">\r\n                          <IconFont style={{ fontSize: 24 }} type=\"icon-wangpan\" />\r\n                        </span>\r\n                      </Tooltip>\r\n                      <Link to=\"/license\">\r\n                        <Button type=\"primary\" style={{ background: '#00AEB7', borderColor: '#00AEB7' }}>申请企业认证</Button>\r\n                      </Link>\r\n                    </>\r\n                  )\r\n                : null\r\n            }\r\n          </Col>\r\n        </Row>\r\n      </Header>\r\n      <Content className=\"index-con\">\r\n        <Row className=\"index-sec\" type=\"flex\" align=\"middle\" style={{ padding: '24px 0' }}>\r\n          <Col span={6} style={{ textAlign: 'center', borderRight: '1px solid #ddd' }}>\r\n            <Progress type=\"circle\" percent={basisInfo ? Math.round(basisInfo.base_limit.staff_number.use_number / basisInfo.base_limit.staff_number.type_number * 100) : 0} />\r\n          </Col>\r\n          <Col span={12} style={{ padding: '0 24px' }}>\r\n            <div style={{ display: 'inline-block', marginRight: '24px' }}>\r\n              <p>当前可用人数</p>\r\n              <span className=\"index-per\">{basisInfo && basisInfo.base_limit.staff_number.type_number}人</span>\r\n            </div>\r\n            <div style={{ display: 'inline-block' }}>\r\n              <p>剩余可用人数</p>\r\n              <span className=\"index-per\">{basisInfo && basisInfo.base_limit.staff_number.type_number - basisInfo.base_limit.staff_number.use_number}人</span>\r\n            </div>\r\n          </Col>\r\n          <Col span={6} style={{ textAlign: 'center' }}>\r\n            <Link to=\"/buy/people\"><Button type=\"primary\" ghost>购买名额</Button></Link>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"index-sec text-center\" style={{ paddingBottom: '12px' }}>\r\n          <Col span={8}>\r\n            <PersonnelData dataSource={basisInfo && {\r\n              staff_number: basisInfo.base_limit.staff_number,\r\n              partner: basisInfo.base_limit.partner,\r\n              external_contact: basisInfo.base_limit.external_contact\r\n            }} />\r\n            <Link to=\"/buy/people\"><Button type=\"primary\" ghost>扩容</Button></Link>\r\n          </Col>\r\n          <Col span={8}>\r\n            <DiskData dataSource={basisInfo && basisInfo.base_limit.disk} />\r\n            <Link to=\"/buy/netdisc\"><Button type=\"primary\" ghost>扩容</Button></Link>\r\n          </Col>\r\n          <Col span={8}>\r\n            <SmsData dataSource={basisInfo && basisInfo.base_limit.sms} />\r\n            <Link to=\"/buy/sms\"><Button type=\"primary\" ghost>充值</Button></Link>\r\n          </Col>\r\n        </Row>\r\n      </Content>\r\n    </Layout>\r\n  )\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n"],"sourceRoot":""}