{"version":3,"sources":["pages/sort/Index.tsx"],"names":["Content","RadioGroup","antd_es_radio__WEBPACK_IMPORTED_MODULE_21__","Group","RadioButton","Button","Sort","connect","state","Object","C_Users_82052_code_gzt_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_19__","listLoading","loading","effects","concat","dispatch","showDepartmentList","params","type","payload","showPositionList","listType","sortLoading","currentPostion","saveSortInfo","_this","antd_es_message__WEBPACK_IMPORTED_MODULE_13__","success","setState","sortlist","document","body","querySelectorAll","sortJson","index","length","dataset","C_Users_82052_code_gzt_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_11__","C_Users_82052_code_gzt_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_10___default","a","mark","_callee","result","wrap","_context","prev","next","req","method","sort_data","sent","status","props","history","push","info","stop","onRadionChange","e","target","value","dragulaDecorator","componentBackingInstance","Dragula","on","el","Array","from","children","findIndex","item","source","sibling","_callee2","_context2","oldOrder","newOrder","node_id","this","_this$props","departmentList","permissionList","_this$state","sortList","react__WEBPACK_IMPORTED_MODULE_24__","className","antd_es_row__WEBPACK_IMPORTED_MODULE_5__","antd_es_col__WEBPACK_IMPORTED_MODULE_9__","span","defaultValue","buttonStyle","onChange","antd_es_button__WEBPACK_IMPORTED_MODULE_7__","onClick","antd_es_spin__WEBPACK_IMPORTED_MODULE_1__","spinning","delay","ref","data","map","id","name","key","data-type","antd_es_icon__WEBPACK_IMPORTED_MODULE_3__","React"],"mappings":"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","file":"static/js/33.ed5410e1.chunk.js","sourcesContent":["\r\nimport * as React from 'react';\r\nimport { Layout, Radio, Button, Col, Row, Icon, Spin, message } from 'antd';\r\nimport { connect } from 'dva';\r\nimport Dragula from 'react-dragula';\r\nimport { History } from 'history';\r\nimport './index.scss';\r\nimport req from '../../utils/request';\r\n\r\nconst { Content } = Layout;\r\nconst RadioGroup = Radio.Group;\r\nconst RadioButton = Radio.Button;\r\nconst NAMESPACE = 'Company';\r\ninterface SortProps {\r\n  history: History,\r\n  showDepartmentList: any,\r\n  showPositionList: any,\r\n  departmentList: any,\r\n  permissionList: any,\r\n  saveSortInfo: any,\r\n  listLoading: boolean\r\n}\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    ...state[NAMESPACE],\r\n    listLoading: state.loading.effects[`${NAMESPACE}/queryDepartmentList`],\r\n  }\r\n};\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    //部门列表\r\n    showDepartmentList: (params: any) => {\r\n      dispatch({\r\n        type: `${NAMESPACE}/queryDepartmentList`,\r\n        payload: params\r\n      })\r\n    },\r\n    //职务列表\r\n    showPositionList: (params: any) => {\r\n      dispatch({\r\n        type: `${NAMESPACE}/queryPermissionList`,\r\n        payload: params\r\n      });\r\n    },\r\n  }\r\n}\r\n\r\n@connect(mapStateToProps, mapDispatchToProps)\r\nexport default class Sort extends React.Component<SortProps, any> {\r\n  state = {\r\n    listType: 'department',\r\n    sortLoading: false, //保存排序loading\r\n    currentPostion: -1\r\n  }\r\n  componentDidMount() {\r\n    this.props.showPositionList();\r\n    this.props.showDepartmentList();\r\n  }\r\n  /**\r\n   * 排序\r\n   */\r\n  saveSortInfo = () => {\r\n\r\n    if (this.state.listType === 'department') {//部门\r\n      message.success('提交成功');\r\n    } else {//职务\r\n      this.setState({\r\n        sortLoading: true\r\n      })\r\n      const sortlist = document.body.querySelectorAll('.listWrapper .sortList');\r\n      const sortJson = {};\r\n      for (let index = 0; index < sortlist.length; index++) {\r\n        sortJson[(sortlist[index] as any).dataset.type] = index;\r\n      }\r\n      (async () => {\r\n        const result = await req('/api/management_job_ordering', {\r\n          method: 'POST',\r\n          body: {\r\n            sort_data: sortJson\r\n          }\r\n        })\r\n        this.setState({\r\n          sortLoading: false\r\n        })\r\n        if (result.status === 'success') {\r\n          message.success('提交成功');\r\n          this.props.history.push('/work/approval/management');\r\n        } else {\r\n          message.info('服务器繁忙，请稍后再试~')\r\n        }\r\n      })()\r\n    }\r\n  }\r\n  onRadionChange = (e: any) => {\r\n    if (e.target.value === 'department') {\r\n      this.setState({\r\n        listType: 'department'\r\n      })\r\n    } else {\r\n      this.setState({\r\n        listType: 'position'\r\n      })\r\n    }\r\n  }\r\n  /**\r\n   * 激活拖拽插件\r\n   */\r\n  dragulaDecorator = (componentBackingInstance: any) => {\r\n    if (componentBackingInstance) {\r\n      Dragula([componentBackingInstance]).on('drag', (el: any, target: any) => {\r\n        this.setState({\r\n          currentPostion: Array.from(target.children).findIndex((item) => item === el)\r\n        })\r\n      }).on('drop', (el: any, target: any, source: any, sibling: any) => {\r\n        (async () => {\r\n          const result = await req('/api/management_department_ordering', {\r\n            method: 'POST',\r\n            body: {\r\n              oldOrder: this.state.currentPostion,\r\n              newOrder: Array.from(target.children).findIndex((item) => item === el),\r\n              node_id: el.dataset.type\r\n            }\r\n          })\r\n          if (result.status !== 'success') {\r\n            message.info('服务器繁忙，请稍后再试~')\r\n          }\r\n        })()\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    const { departmentList, permissionList, listLoading } = this.props;\r\n    const { listType, sortLoading } = this.state;\r\n    const sortList = listType === 'department' ? departmentList : permissionList;\r\n\r\n    return (\r\n      <Content className=\"sort-wrapper wrapper\">\r\n        <div>\r\n          <Row>\r\n            <Col span={4}>\r\n              <RadioGroup defaultValue=\"department\" buttonStyle=\"solid\" onChange={this.onRadionChange}>\r\n                <RadioButton value=\"department\" >部门</RadioButton>\r\n                <RadioButton value=\"position\"  >职务</RadioButton>\r\n              </RadioGroup></Col>\r\n            <Col span={20}>\r\n              <div className=\"text-right\">\r\n                <Button type='primary' className=\"btn\" onClick={this.saveSortInfo} loading={sortLoading}>保存</Button>\r\n                <Button>取消</Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Spin spinning={listLoading} delay={300}>\r\n            <div className='listWrapper' ref={this.dragulaDecorator}>\r\n              {\r\n                sortList && sortList.data.map((item: any, index: any) => {\r\n                  const { id, name, } = item;\r\n                  return (\r\n                    <Row className=\"sortList cursor-pointer\" key={index} data-type={id}>\r\n                      <Col>\r\n                        <Icon type=\"ordered-list\" className='sortIcon' />\r\n                        名称：{name}\r\n                      </Col>\r\n                    </Row>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n          </Spin>\r\n        </div>\r\n      </Content>\r\n    )\r\n  }\r\n}"],"sourceRoot":""}