{"version":3,"sources":["pages/contact/contact.tsx","../node_modules/antd/es/empty/style/index.js"],"names":["Sider","connect","state","companys","dispatch","queryCompanys","type","concat","cancelQueryCompanys","props","_useState","useState","_useState2","Object","_Users_litong_laravel_gzt_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_6__","selectedKeys","setSelectedKeys","hasJumpRef","useRef","useEffect","relate_companys","length","console","log","id","current","history","push","hasCompany","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","antd_es_layout__WEBPACK_IMPORTED_MODULE_8__","style","height","width","theme","className","antd_es_menu__WEBPACK_IMPORTED_MODULE_3__","mode","onSelect","_ref","map","_ref2","name","Item","key","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","to","antd_es_icon__WEBPACK_IMPORTED_MODULE_5__","antd_es_empty__WEBPACK_IMPORTED_MODULE_1__","children","__webpack_require__"],"mappings":"mNAQQA,YAkGOC,sBA/E8C,SAACC,GAAD,MAAY,CACvEC,SAAUD,EAAK,UAAYC,WAG8C,SAACC,GAAD,MAAe,CACxFC,cADwF,WAEtFD,EAAS,CACPE,KAAI,GAAAC,OARQ,YAQR,qBAGRC,oBANwF,WAOtFJ,EAAS,CACPE,KAAI,GAAAC,OAbQ,YAaR,6BAmEKN,CA9Df,SAAiBQ,GAAqB,IAAAC,EAEIC,qBAFJC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE7BK,EAF6BH,EAAA,GAEfI,EAFeJ,EAAA,GAG9BK,EAAaC,kBAAO,GAE1BC,oBAAU,WACRV,EAAMJ,iBACL,IAEHc,oBAAU,WACJV,EAAMN,UAAsD,IAA1CM,EAAMN,SAASiB,gBAAgBC,SACnDC,QAAQC,IAAId,EAAMN,SAAU,WAE5Ba,EAAgB,CAACP,EAAMN,SAASiB,gBAAgB,GAAGI,KAC9CP,EAAWQ,UACdhB,EAAMiB,QAAQC,KAAd,oBAAApB,OAAuCE,EAAMN,SAASiB,gBAAgB,GAAGI,KACzEP,EAAWQ,SAAU,KAGxB,CAAChB,EAAMN,WAnB0B,IA0B5BA,EAAaM,EAAbN,SACFyB,EAAazB,GAAgD,IAApCA,EAASiB,gBAAgBC,OAExD,OACEQ,EAAAC,EAAAC,cAAAC,EAAA,GAAQC,MAAO,CAAEC,OAAQ,uBACvBL,EAAAC,EAAAC,cAAC/B,EAAD,CAAOmC,MAAM,MAAMC,MAAM,QAAQC,UAAU,aAEvCT,EACEC,EAAAC,EAAAC,cAAAO,EAAA,GACEC,KAAK,SACLxB,aAAcA,EACdyB,SAhBZ,SAAAC,GAAqD,IAA7B1B,EAA6B0B,EAA7B1B,aACtBC,EAAgBD,KAkBJZ,EAASiB,gBAAgBsB,IAAI,SAAAC,GAAA,IAAGnB,EAAHmB,EAAGnB,GAAIoB,EAAPD,EAAOC,KAAP,OAC3Bf,EAAAC,EAAAC,cAAAO,EAAA,EAAMO,KAAN,CAAWC,IAAKtB,GACdK,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,GAAE,oBAAAzC,OAAsBiB,IAC5BK,EAAAC,EAAAC,cAAAkB,EAAA,GAAM3C,KAAK,UACXuB,EAAAC,EAAAC,cAAA,QAAMM,UAAU,YAAYO,QAOpCf,EAAAC,EAAAC,cAAAmB,EAAA,SAKPzC,EAAM0C,8CCpGbC,EAAA,IAAAA,EAAA","file":"static/js/45.08a04e07.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Layout, Menu, Icon, Empty } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'dva';\nimport { SelectParam } from 'antd/lib/menu';\nimport { History } from 'history';\nimport { Dispatch } from 'redux';\n\nconst { Sider } = Layout;\n\ninterface StateToContactProps {\n  /** 公司列表信息 */\n  companys: any;\n}\ninterface DispatchToContactProps {\n  /** 获取加入的公司列表信息 */\n  queryCompanys: () => void;\n  /** 取消获取公司列表信息 */\n  cancelQueryCompanys: () => void;\n}\ninterface ContactProps extends DispatchToContactProps, StateToContactProps {\n  children: React.ReactChild\n  history: History;\n\n}\n\nconst NAMESPACE = 'Workbench';\nconst mapStateToProps: (state: any) => StateToContactProps = (state) => ({\n  companys: state[NAMESPACE].companys\n});\n\nconst mapDispatchToProps: (dispatch: Dispatch) => DispatchToContactProps = (dispatch) => ({\n  queryCompanys() {\n    dispatch({\n      type: `${NAMESPACE}/queryCompanys`,\n    })\n  },\n  cancelQueryCompanys() {\n    dispatch({\n      type: `${NAMESPACE}/cancelQueryCompanys`\n    })\n  }\n});\n\nfunction Contact(props: ContactProps) {\n\n  const [selectedKeys, setSelectedKeys] = useState();\n  const hasJumpRef = useRef(false);\n\n  useEffect(() => {\n    props.queryCompanys();\n  }, [])\n\n  useEffect(() => {\n    if (props.companys && props.companys.relate_companys.length !== 0) {\n      console.log(props.companys, 333333333);\n\n      setSelectedKeys([props.companys.relate_companys[0].id]);\n      if (!hasJumpRef.current) {\n        props.history.push(`/contact/company/${props.companys.relate_companys[0].id}`);\n        hasJumpRef.current = true;\n      }\n    }\n  }, [props.companys])\n\n  function handleSelect({ selectedKeys }: SelectParam) {\n    setSelectedKeys(selectedKeys);\n\n  }\n\n  const { companys } = props;\n  const hasCompany = companys && companys.relate_companys.length !== 0;\n\n  return (\n    <Layout style={{ height: 'calc(100vh - 61px)' }}>\n      <Sider width=\"210\" theme=\"light\" className=\"big-sider\">\n        {\n          hasCompany ? (\n            <Menu\n              mode=\"inline\"\n              selectedKeys={selectedKeys}\n              onSelect={handleSelect}\n            >\n              {\n                companys.relate_companys.map(({ id, name }: any) => (\n                  <Menu.Item key={id}>\n                    <Link to={`/contact/company/${id}`}>\n                      <Icon type=\"smile\" />\n                      <span className=\"nav-text\">{name}</span>\n                    </Link>\n                  </Menu.Item>\n                ))\n              }\n            </Menu>\n          ) : (\n              <Empty />\n            )\n        }\n      </Sider>\n\n      {props.children}\n\n    </Layout>\n  )\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact)\n","import '../../style/index.less';\nimport './index.less';"],"sourceRoot":""}