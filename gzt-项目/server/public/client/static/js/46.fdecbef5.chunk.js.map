{"version":3,"sources":["pages/doc/doc.tsx"],"names":["SubMenu","antd_es_menu__WEBPACK_IMPORTED_MODULE_6__","Sider","connect","state","companys","dispatch","queryCompanys","type","concat","cancelQueryCompanys","props","_useState","useState","_useState2","Object","_Users_litong_laravel_gzt_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","currentUrl","setCurrentUrl","useEffect","location","pathname","split","undefined","history","replace","decryptId","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","antd_es_layout__WEBPACK_IMPORTED_MODULE_4__","className","width","theme","selectedKeys","defaultOpenKeys","onSelect","param","mode","Item","key","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","antd_es_icon__WEBPACK_IMPORTED_MODULE_1__","title","relate_companys","map","_ref","id","name","children"],"mappings":"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","file":"static/js/46.fdecbef5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport { Link } from 'react-router-dom'; //  Switch, Route, \nimport { connect } from 'dva';\nimport { Dispatch } from 'redux';\nimport './doc.scss'\nimport { Location, History } from 'history';\nimport { SelectParam } from 'antd/lib/menu';\nimport decryptId from '../../utils/decryptId';\n\nconst SubMenu = Menu.SubMenu;\nconst { Sider } = Layout;\n\n// const NAMESPACE = 'Doc';\nconst WORKBENCH = 'Workbench';\ninterface StateToDocProps {\n  companys: any;\n}\ninterface DispatchToDocProps {\n  /** 获取加入的公司列表信息 */\n  queryCompanys: () => void;\n}\n\ninterface DocProps extends StateToDocProps, DispatchToDocProps {\n  children?: React.ReactNode;\n  location: Location;\n  history: History;\n}\n\n\nconst mapStateToProps: (state: any) => StateToDocProps = (state) => ({\n  companys: state[WORKBENCH].companys\n});\n\nconst mapDispatchToProps: (dispatch: Dispatch) => DispatchToDocProps = (dispatch) => ({\n  queryCompanys() {\n    dispatch({\n      type: `${WORKBENCH}/queryCompanys`,\n    })\n  },\n  cancelQueryCompanys() {\n    dispatch({\n      type: `${WORKBENCH}/cancelQueryCompanys`\n    })\n  }\n});\n\nfunction Doc(props: DocProps) {\n\n  const { companys } = props;\n  const [currentUrl, setCurrentUrl] = useState(['dynamic'])\n\n  useEffect(() => {\n    props.queryCompanys();\n\n    if (props.location.pathname.split('/')[2] === 'company' && (\n      props.location.pathname.split('/')[3] === undefined ||\n      props.location.pathname.split('/')[3] === '')\n    ) {\n      props.history.replace('/doc/dynamic');\n      setCurrentUrl(['dynamic']);\n      return\n    }\n\n    setCurrentUrl([\n      props.location.pathname.split('/')[2] === 'company'\n        ? decryptId(props.location.pathname.split('/')[3])\n        : props.location.pathname.split('/')[2]\n    ])\n  }, [])\n\n  useEffect(() => {\n    if (props.location.pathname.split('/')[2] === 'dynamic' && currentUrl[0] !== 'dynamic') {\n      setCurrentUrl(['dynamic'])\n    }\n  }, [props.location.pathname])\n\n  function handleSelect(param: SelectParam) {\n    setCurrentUrl(param.selectedKeys)\n  }\n\n  return (\n    <Layout className=\"doc\">\n      <Sider width=\"210\" theme=\"light\" className=\"big-sider\">\n        <Menu\n          selectedKeys={currentUrl}\n          defaultOpenKeys={['company']}\n          onSelect={handleSelect}\n          mode=\"inline\"\n        >\n          <Menu.Item key=\"dynamic\">\n            <Link to=\"/doc/dynamic\">\n              <Icon type=\"smile\" />\n              <span className=\"nav-text\">文件动态</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"recently\">\n            <Link to=\"/doc/recently\">\n              <Icon type=\"smile\" />\n              <span className=\"nav-text\">最近使用</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"personal\">\n            <Link to=\"/doc/personal\">\n              <Icon type=\"user\" />\n              <span className=\"nav-text\">我的文件</span>\n            </Link>\n          </Menu.Item>\n          <SubMenu key=\"company\" title={<span><Icon type=\"file-text\" /><span>企业文件</span></span>}>\n            {\n              companys && companys.relate_companys.map(({ id, name }: any) => (\n                <Menu.Item key={decryptId(id)}>\n                  <Link to={`/doc/company/${id}`}>\n                    <Icon type=\"smile\" />\n                    <span className=\"nav-text\">{name}</span>\n                  </Link>\n                </Menu.Item>\n              ))\n            }\n          </SubMenu>\n        </Menu>\n      </Sider>\n\n      {props.children}\n\n    </Layout>\n  )\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Doc)\n"],"sourceRoot":""}