{"version":3,"sources":["pages/doc/dynamic.tsx","utils/getFileTypeBySuffix.ts","utils/handleTime.ts"],"names":["Content","typeMapText","删除文件","上传文件","DynamicDoc","props","_useState","useState","_useState2","Object","_Users_litong_laravel_gzt_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","dynamics","setDynamics","useEffect","_Users_litong_laravel_gzt_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_litong_laravel_gzt_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","result","wrap","_context","prev","next","get","sent","stop","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","style","padding","height","background","map","_ref2","index","id","created_at","type","dir","file_name","dynamicText","concat","getFileTypeBySuffix","key","display","flex","width","handleTime","fileName","suffix","split","pop","includes","__webpack_require__","d","__webpack_exports__","time","_moment$format$split","moment","format","_moment$format$split2","_Users_litong_laravel_gzt_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","NOW_MM","NOW_DD","_moment$format$split3","_moment$format$split4","MSG_MM","MSG_DD","Number"],"mappings":"mMAMQA,cAEFC,EAAc,CAClBC,2BAAQ,qBACRC,2BAAQ,sBAyCKC,UAtCf,SAAoBC,GAAY,IAAAC,EAEEC,mBAAS,IAFXC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEvBK,EAFuBH,EAAA,GAEbI,EAFaJ,EAAA,GAW9B,OAPAK,oBAAU,WACRJ,OAAAK,EAAA,EAAAL,CAAAM,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACsBC,YAAI,yBAD1B,OACOL,EADPE,EAAAI,KAECb,EAAYO,GAFb,wBAAAE,EAAAK,SAAAR,KAADT,IAIC,IAGDkB,EAAAX,EAAAY,cAAC5B,EAAD,CAAS6B,MAAO,CAAEC,QAAS,OAAQC,OAAQ,uBACzCJ,EAAAX,EAAAY,cAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQE,WAAY,SAEvCrB,GAAYA,EAASsB,IAAI,SAAAC,EAA2CC,GAAU,IAAlDC,EAAkDF,EAAlDE,GAAIC,EAA8CH,EAA9CG,WAAYC,EAAkCJ,EAAlCI,KAAMC,EAA4BL,EAA5BK,IAAKC,EAAuBN,EAAvBM,UAE/CC,EAAuB,6BAATH,EAAA,gDAAAI,OACHH,EADG,KAEP,6BAATD,EAAA,gDAAAI,OACeH,EADf,uBAAAG,OAEUH,GAAY,2BAFtB,MAAAG,OAEiCzC,EAAYqC,GAF7C,OAAAI,OAE2F,QAAnCC,YAAoBH,GAAuB,qBAAQ,sBAE/G,OACEb,EAAAX,EAAAY,cAAA,OAAKgB,IAAKT,EAAON,MAAO,CAAEgB,QAAS,OAAQf,QAAS,WAClDH,EAAAX,EAAAY,cAAA,OAAKgB,IAAKR,EAAIP,MAAO,CAAEiB,KAAM,SAC1BL,GAEHd,EAAAX,EAAAY,cAAA,OAAKC,MAAO,CAAEiB,KAAM,WAAYC,MAAO,MAAQC,YAAWX,4CCxC3D,SAASM,EAAoBM,GAC1C,GAAKA,EAAL,CACA,IACMC,EAASD,EAASE,MAAM,KAAKC,OAAS,GAC5C,MAFgB,CAAC,MAAO,MAAO,OAEhBC,SAASH,GAAU,MAAQA,GAL5CI,EAAAC,EAAAC,EAAA,sBAAAb,oGCOe,SAASK,EAAWS,GACjC,IAD+CC,EAEtBC,MAASC,OAAO,SAAST,MAAM,KAFTU,EAAApD,OAAAqD,EAAA,EAAArD,CAAAiD,EAAA,GAExCK,EAFwCF,EAAA,GAEhCG,EAFgCH,EAAA,GAAAI,EAGtBN,IAAOF,GAAMG,OAAO,SAAST,MAAM,KAHbe,EAAAzD,OAAAqD,EAAA,EAAArD,CAAAwD,EAAA,GAGxCE,EAHwCD,EAAA,GAGhCE,EAHgCF,EAAA,GAe/C,OAXIH,IAAWI,EACTH,IAAWI,EACFT,IAAOF,GAAMG,OAAO,SACtBS,OAAOL,KAAYK,OAAOD,GAAU,EAClC,eAEAT,IAAOF,GAAMG,OAAO,SAGtBD,IAAOF,GAAMG,OAAO","file":"static/js/47.5e1d9fe7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Layout } from 'antd';\nimport { get } from '../../utils/request';\nimport handleTime from '../../utils/handleTime';\nimport getFileTypeBySuffix from '../../utils/getFileTypeBySuffix';\n\nconst { Content } = Layout;\n\nconst typeMapText = {\n  '删除文件': '删除了',\n  '上传文件': '上传了'\n}\n\nfunction DynamicDoc(props: any) {\n\n  const [dynamics, setDynamics] = useState([])\n\n  useEffect(() => {\n    (async () => {\n      const result = await get('/api/oss_fileDynamics');\n      setDynamics(result);\n    })()\n  }, [])\n\n  return (\n    <Content style={{ padding: '24px', height: 'calc(100vh - 61px)' }}>\n      <div style={{ padding: '24px', background: '#fff' }}>\n        {\n          dynamics && dynamics.map(({ id, created_at, type, dir, file_name }, index) => {\n\n            const dynamicText = type === '删除目录'\n              ? `我 删除了文件夹 \"${dir}\"`\n              : type === '创建目录'\n                ? `我 创建了文件夹 \"${dir}\"`\n                : `我 在 \"${dir ? dir : '我的文件'}\" ${typeMapText[type]} 1 ${getFileTypeBySuffix(file_name) === 'img' ? '张图片' : '个文件'}`\n\n            return (\n              <div key={index} style={{ display: 'flex', padding: '12px 0' }}>\n                <div key={id} style={{ flex: 'auto' }}>\n                  {dynamicText}\n                </div>\n                <div style={{ flex: '0 0 auto', width: 100 }}>{handleTime(created_at)}</div>\n              </div>\n            )\n          })\n        }\n      </div>\n    </Content>\n  )\n}\n\nexport default DynamicDoc\n","/** 获取文件类型 */\nexport default function getFileTypeBySuffix(fileName: string) {\n  if (!fileName) return;\n  const imgType = ['jpg', 'png', 'gif'];\n  const suffix = fileName.split('.').pop() || '';\n  return imgType.includes(suffix) ? 'img' : suffix;\n}","import moment from \"moment\";\n\n/**\n * 处理服务端返回的2019-01-18 15:36:59格式的时间为\n * 当天: 15:36(显示时:分)  昨天: 昨天(显示昨天) 昨天以前: 01-18(显示月:日)\n * @param time \n */\nexport default function handleTime(time: string) {\n  let showTime: string;\n  const [NOW_MM, NOW_DD] = moment().format('MM-DD').split('-');\n  const [MSG_MM, MSG_DD] = moment(time).format('MM-DD').split('-');\n  if (NOW_MM === MSG_MM) {\n    if (NOW_DD === MSG_DD) {\n      showTime = moment(time).format('HH:mm')\n    } else if (Number(NOW_DD) === Number(MSG_DD) + 1) {\n      showTime = '昨天'\n    } else {\n      showTime = moment(time).format('MM-DD')\n    }\n  } else {\n    showTime = moment(time).format('MM-DD');\n  }\n  return showTime\n}\n"],"sourceRoot":""}