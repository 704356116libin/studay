{"version":3,"sources":["pages/settings/profile.tsx"],"names":["Content","FormItem","antd_es_form__WEBPACK_IMPORTED_MODULE_18__","Item","__webpack_exports__","create","connect","state","userInfo","dispatch","queryUserInfo","type","concat","updateUserInfo","body","cb","payload","props","_useState","useState","_useState2","Object","_Users_litong_laravel_gzt_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_16__","avatarSrc","setAvatarSrc","_useState3","_useState4","loading","setLoading","useEffect","_Users_litong_laravel_gzt_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_15__","_Users_litong_laravel_gzt_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_14___default","a","mark","_callee","result","wrap","_context","prev","next","get","sent","status","avatar","oss_path","stop","_props$userInfo","name","signature","form","setFieldsValue","getFieldDecorator","uploadButton","react__WEBPACK_IMPORTED_MODULE_21___default","createElement","antd_es_icon__WEBPACK_IMPORTED_MODULE_11__","className","style","padding","lineHeight","fontSize","borderBottom","antd_es_row__WEBPACK_IMPORTED_MODULE_1__","antd_es_col__WEBPACK_IMPORTED_MODULE_5__","span","onSubmit","e","preventDefault","validateFieldsAndScroll","err","values","antd_es_message__WEBPACK_IMPORTED_MODULE_13__","success","hideRequiredMark","layout","marginTop","width","label","rules","required","message","antd_es_input__WEBPACK_IMPORTED_MODULE_9__","TextArea","placeholder","antd_es_button__WEBPACK_IMPORTED_MODULE_7__","htmlType","marginRight","colon","antd_es_upload__WEBPACK_IMPORTED_MODULE_3__","listType","beforeUpload","file","isJPG","includes","error","isLt2M","size","onChange","_ref2","fileList","event","response","action","showUploadList","headers","authorization","Authorization","src","alt"],"mappings":"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","file":"static/js/48.919a11ef.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Layout, Icon, Form, Button, Input, Upload, Row, Col, message } from 'antd';\nimport { Authorization } from '../../utils/getAuthorization';\nimport { get } from '../../utils/request';\nimport { connect } from 'dva';\nimport { FormComponentProps } from 'antd/lib/form';\nimport { Dispatch } from 'redux';\nimport './setting.scss'\n\nconst { Content } = Layout;\nconst FormItem = Form.Item;\nconst NAMESPACE = 'UserInfo';\n\ninterface StateToProfileProps {\n  userInfo: any;\n}\ninterface DispatchProfileProps {\n  queryUserInfo: Function;\n  /** 更新用户个人资料 */\n  updateUserInfo: (body: any, cb: () => void) => void;\n}\n\nconst mapStateToProps = (state: any): StateToProfileProps => ({\n  userInfo: state[NAMESPACE].userInfo\n})\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProfileProps => ({\n  queryUserInfo() {\n    dispatch({\n      type: `${NAMESPACE}/queryUserInfo`\n    })\n  },\n  updateUserInfo(body, cb) {\n    dispatch({\n      type: `${NAMESPACE}/updateUserInfo`,\n      payload: { body, cb }\n    })\n  }\n})\n\ninterface ProfileProps extends FormComponentProps, StateToProfileProps, DispatchProfileProps {\n}\n\nfunction Profile(props: ProfileProps) {\n\n  const [avatarSrc, setAvatarSrc] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // 获取用户头像\n  useEffect(() => {\n    (async () => {\n      const result = await get('/api/u_get_getPersonalAvatar');\n      if (result.status === 'success') {\n        setAvatarSrc(result.avatar.oss_path);\n      }\n    })()\n  }, [])\n  /** 设置用户资料 */\n  useEffect(() => {\n    if (props.userInfo) {\n      const { name, signature } = props.userInfo;\n      props.form.setFieldsValue({\n        name,\n        signature\n      })\n    }\n  }, [props.userInfo])\n\n  const { getFieldDecorator } = props.form;\n  /** 更新用户资料 */\n  function handleSubmit(e: any) {\n    e.preventDefault();\n    props.form.validateFieldsAndScroll((err: any, values: any) => {\n      if (!err) {\n        props.updateUserInfo(values, () => {\n          message.success('更新成功');\n        });\n      }\n    })\n  }\n  /** 上传限制 */\n  function beforeUpload(file: any) {\n\n    const isJPG = ['image/png', 'image/jpeg'].includes(file.type);\n    if (!isJPG) {\n      message.error('只支持jpg和png格式的头像!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('最大支持2M图片!');\n    }\n    return isJPG && isLt2M;\n  }\n  /** 头像上传 */\n  function handleAvatarChange({ file, fileList, event }: any) {\n    if (file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n    if (file.status === 'done') {\n      setLoading(false);\n      setAvatarSrc(file.response.avatar.avatar.oss_path);\n    }\n  }\n  /** loading 按钮 */\n  const uploadButton = (\n    <div>\n      <Icon type={loading ? 'loading' : 'plus'} />\n      <div className=\"ant-upload-text\">{loading ? '上传中' : '上传头像'}</div>\n    </div>\n  );\n\n  return (\n    <Content className=\"settings-con\">\n      <h2 style={{ padding: '5px 0', lineHeight: '40px', fontSize: '18px', borderBottom: '1px solid #e1e4e8' }}>基本资料</h2>\n      <Row>\n        <Col span={16}>\n          <Form\n            onSubmit={handleSubmit}\n            hideRequiredMark={true}\n            layout=\"vertical\"\n            style={{ marginTop: '10px', width: '360px' }}\n          >\n            {/* <FormItem\n              label=\"邮箱\"\n            >\n              {getFieldDecorator('email', {\n                rules: [{\n                  required: true, message: '请输入邮箱!',\n                }],\n              })(\n                <Input />\n              )}\n            </FormItem> */}\n            <FormItem\n              label=\"昵称\"\n            >\n              {getFieldDecorator('name', {\n                rules: [{\n                  required: true, message: '请输入昵称!',\n                }],\n              })(\n                <Input />\n              )}\n            </FormItem>\n            <FormItem\n              label=\"个性签名\"\n            >\n              {getFieldDecorator('signature')(\n                <Input.TextArea placeholder=\"向别人展示一下自己\" />\n              )}\n            </FormItem>\n            <FormItem>\n              <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '20px' }}>更新个人信息</Button>\n            </FormItem>\n          </Form>\n        </Col>\n        <Col span={8}>\n          <FormItem\n            colon={false}\n            label=\"头像\"\n          >\n            <Upload\n              name=\"avatar\"\n              listType=\"picture-card\"\n              className=\"avatar-uploader\"\n              beforeUpload={beforeUpload}\n              onChange={handleAvatarChange}\n              action=\"/api/u_get_editPersonalAvatar\"\n              showUploadList={false}\n              headers={{\n                authorization: Authorization,\n              }}\n            >\n              {loading ? uploadButton : avatarSrc ? <img src={avatarSrc} alt=\"avatar\" /> : uploadButton}\n            </Upload>\n          </FormItem>\n        </Col>\n      </Row>\n    </Content>\n  )\n}\nexport default Form.create()(connect(mapStateToProps, mapDispatchToProps)(Profile))\n"],"sourceRoot":""}