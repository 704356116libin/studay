{"version":3,"sources":["pages/work/review/Dataanalysis.tsx"],"names":["DataView","DataSet","Html","Guide","data","genre","sold","income","cols","alias","theme","axis","left","title","textStyle","fill","bottom","dv","source","item","count","transform","type","field","dimension","as","cols2","percent","formatter","val","Dataanalysis","react__WEBPACK_IMPORTED_MODULE_11__","antd_es_layout__WEBPACK_IMPORTED_MODULE_1__","className","antd_es_row__WEBPACK_IMPORTED_MODULE_3__","antd_es_col__WEBPACK_IMPORTED_MODULE_5__","span","bizcharts__WEBPACK_IMPORTED_MODULE_12__","width","height","scale","name","position","offsetY","color","padding","radius","innerRadius","offsetX","showTitle","itemTpl","html","alignX","alignY","tooltip","value","style","lineWidth","stroke","content","point","React"],"mappings":"iQAOQA,SAAaC,EAAbD,SACAE,EAASC,QAATD,KAGFE,EAAO,CACX,CAAEC,MAAO,MAAOC,KAAM,IAAKC,OAAQ,MACnC,CAAEF,MAAO,2BAAQC,KAAM,IAAKC,OAAQ,KACpC,CAAEF,MAAO,MAAOC,KAAM,IAAKC,OAAQ,KACnC,CAAEF,MAAO,iBAAQC,KAAM,IAAKC,OAAQ,MACpC,CAAEF,MAAO,iBAAQC,KAAM,IAAKC,OAAQ,OAIhCC,EAAO,CACXF,KAAM,CAAEG,MAAO,oDACfJ,MAAO,CAAEI,MAAO,6BAIZC,EAAQ,CACZC,KAAM,CACJC,KAAM,CACJC,MAAO,CACLC,UAAW,CACTC,KAAM,UAIZC,OAAQ,CACNH,MAAO,CACLC,UAAW,CACTC,KAAM,YAOVE,EAAK,IAAIjB,EASfiB,EAAGC,OARW,CACZ,CAAEC,KAAM,qBAAOC,MAAO,IACtB,CAAED,KAAM,qBAAOC,MAAO,IACtB,CAAED,KAAM,qBAAOC,MAAO,IACtB,CAAED,KAAM,qBAAOC,MAAO,IACtB,CAAED,KAAM,qBAAOC,MAAO,KAGPC,UAAU,CACzBC,KAAM,UACNC,MAAO,QACPC,UAAW,OACXC,GAAI,YAGN,IAAMC,EAAQ,CACZC,QAAS,CACPC,UAAW,SAACC,GAEV,OADAA,EAAY,IAANA,EAAY,OAQHC,gOAMjB,OACEC,EAAA,cAAAC,EAAA,GAAQC,UAAU,uBAChBF,EAAA,cAAAG,EAAA,OACEH,EAAA,cAAAI,EAAA,GAAKC,KAAM,IACTL,EAAA,cAACM,EAAA,MAAD,CAAOC,MAAO,IAAKC,OAAQ,IAAKnC,KAAMA,EAAMoC,MAAOhC,EAAME,MAAOA,GAC9DqB,EAAA,cAACM,EAAA,KAAD,CAAMI,KAAK,QAAQC,SAAS,WAC5BX,EAAA,cAACM,EAAA,KAAD,CAAMI,KAAK,OAAOC,SAAS,SAC3BX,EAAA,cAACM,EAAA,OAAD,CAAQK,SAAS,MAAMC,QAAS,KAChCZ,EAAA,cAACM,EAAA,QAAD,MACAN,EAAA,cAACM,EAAA,KAAD,CAAMf,KAAK,WAAWoB,SAAS,aAAaE,MAAM,YAItDb,EAAA,cAAAI,EAAA,GAAKC,KAAM,IACTL,EAAA,cAACM,EAAA,MAAD,CACEC,MAAO,IACPC,OAAQ,IACRnC,KAAMa,EACN4B,QAAS,CAAC,GAAI,IAAK,GAAI,IACvBL,MAAOd,GAEPK,EAAA,cAACM,EAAA,MAAD,CAAOf,KAAK,QAAQwB,OAAQ,EAAGC,YAAa,KAC5ChB,EAAA,cAACM,EAAA,KAAD,CAAMI,KAAK,YACXV,EAAA,cAACM,EAAA,OAAD,CACEK,SAAS,QACTC,SAAS,GACTK,QAAS,IAEXjB,EAAA,cAACM,EAAA,QAAD,CACEY,WAAW,EACXC,QAAQ,sGAEVnB,EAAA,cAACM,EAAA,MAAD,KAMEN,EAAA,cAAC7B,EAAD,CACEwC,SAAU,CAAC,MAAO,OAClBS,KAAK,iMACLC,OAAO,SACPC,OAAO,YAGXtB,EAAA,cAACM,EAAA,KAAD,CACEf,KAAK,gBACLoB,SAAS,UACTE,MAAM,OACNU,QAAS,CACP,eACA,SAACnC,EAAMQ,GAEL,MAAO,CACLc,KAAMtB,EACNoC,MAHF5B,EAAoB,IAAVA,EAAgB,OAO9B6B,MAAO,CACLC,UAAW,EACXC,OAAQ,SAGV3B,EAAA,cAACM,EAAA,MAAD,CACEsB,QAAQ,UACR/B,UAAW,SAACC,EAAKV,GACf,OAAOA,EAAKyC,MAAMzC,KAAO,KAAOU,iBAzEVgC","file":"static/js/61.282c78f2.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Layout, Row, Col } from 'antd';\nimport {\n  Chart, Geom, Axis, Tooltip, Legend, Coord, Label, Guide,\n} from 'bizcharts';\nimport DataSet from \"@antv/data-set\";\n\nconst { DataView } = DataSet;\nconst { Html } = Guide;\n\n// 数据源\nconst data = [\n  { genre: 'LOL', sold: 275, income: 2300 },\n  { genre: '绝地求生', sold: 115, income: 667 },\n  { genre: 'DNF', sold: 120, income: 982 },\n  { genre: 'QQ炫舞', sold: 350, income: 5271 },\n  { genre: 'QQ飞车', sold: 150, income: 3710 }\n];\n\n// 定义度量\nconst cols = {\n  sold: { alias: '最高同时在线人数' },\n  genre: { alias: '游戏种类' }\n};\n\n// 单图表主题配置\nconst theme = {\n  axis: {\n    left: {\n      title: {\n        textStyle: {\n          fill: '#666'\n        }\n      }\n    },\n    bottom: {\n      title: {\n        textStyle: {\n          fill: '#666'\n        }\n      }\n    }\n\n  }\n}\nconst dv = new DataView();\nconst data2 = [\n  { item: \"事例一\", count: 40 },\n  { item: \"事例二\", count: 21 },\n  { item: \"事例三\", count: 17 },\n  { item: \"事例四\", count: 13 },\n  { item: \"事例五\", count: 9 }\n];\n\ndv.source(data2).transform({\n  type: \"percent\",\n  field: \"count\",\n  dimension: \"item\",\n  as: \"percent\"\n});\n\nconst cols2 = {\n  percent: {\n    formatter: (val: any) => {\n      val = val * 100 + \"%\";\n      return val;\n    }\n  }\n};\n/**\n * 数据展示\n */\nexport default class Dataanalysis extends React.Component<any>{\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <Layout className=\"review-dataanalysis\">\n        <Row>\n          <Col span={12}>\n            <Chart width={600} height={400} data={data} scale={cols} theme={theme}>\n              <Axis name=\"genre\" position=\"bottom\" />\n              <Axis name=\"sold\" position=\"left\" />\n              <Legend position=\"top\" offsetY={25} />\n              <Tooltip />\n              <Geom type=\"interval\" position=\"genre*sold\" color=\"genre\" />\n            </Chart>\n\n          </Col>\n          <Col span={12}>\n            <Chart\n              width={600}\n              height={400}\n              data={dv}\n              padding={[80, 100, 80, 80]}\n              scale={cols2}\n            >\n              <Coord type=\"theta\" radius={1} innerRadius={0.6} />\n              <Axis name=\"percent\" />\n              <Legend\n                position=\"right\"\n                offsetY={-400 / 2 + 120}\n                offsetX={0}\n              />\n              <Tooltip\n                showTitle={false}\n                itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\"\n              />\n              <Guide>\n                {/* <Text\n                  position={[\"50%\", \"50%\"]}\n                  content=\"111111\"\n                  offsetX={-20}\n                /> */}\n                <Html\n                  position={[\"50%\", \"50%\"]}\n                  html=\"<div style=&quot;color:#8c8c8c;font-size:1.16em;text-align: center;width: 120px;overflow:hidden&quot;>总金额<br><span style=&quot;color:#262626;font-size:2em&quot;>15781</span><br>万元</div>\"\n                  alignX=\"middle\"\n                  alignY=\"middle\"\n                />\n              </Guide>\n              <Geom\n                type=\"intervalStack\"\n                position=\"percent\"\n                color=\"item\"\n                tooltip={[\n                  \"item*percent\",\n                  (item, percent) => {\n                    percent = percent * 100 + \"%\";\n                    return {\n                      name: item,\n                      value: percent\n                    };\n                  }\n                ]}\n                style={{\n                  lineWidth: 1,\n                  stroke: \"#fff\"\n                }}\n              >\n                <Label\n                  content=\"percent\"\n                  formatter={(val, item) => {\n                    return item.point.item + \": \" + val;\n                  }}\n                />\n              </Geom>\n            </Chart>\n\n          </Col>\n        </Row>\n\n      </Layout>\n    );\n  }\n}\n"],"sourceRoot":""}